class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer, Integer>mp=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            if(!mp.containsKey(nums[i]))
            mp.put(nums[i],1);
            else{
                mp.put(nums[i], mp.get(nums[i]) + 1);
            }
        }
        int m=0;
        int[] temp=new int[k];
        List<Map.Entry<Integer,Integer>>arr = new ArrayList<>(mp.entrySet());
        arr.sort((entry1, entry2) -> Integer.compare(entry2.getValue(), entry1.getValue()));
        Map<Integer,Integer> smp = new LinkedHashMap<>();
        for (var entry : arr) {
            if(m<k){
            temp[m]=entry.getKey();
            m++;}
            else{
                break;
            }
        }
        return temp;
    }
}
